/*
SQLyog Ultimate v13.1.1 (64 bit)
MySQL - 5.7.34-log : Database - buukle-generator
*********************************************************************
*/

/*!40101 SET NAMES utf8 */;

/*!40101 SET SQL_MODE=''*/;

/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
CREATE DATABASE /*!32312 IF NOT EXISTS*/`buukle-generator` /*!40100 DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_bin */;

USE `buukle-generator`;

/*Table structure for table `configures` */

DROP TABLE IF EXISTS `configures`;

CREATE TABLE `configures` (
  `id` int(16) NOT NULL AUTO_INCREMENT COMMENT '主键id',
  `audit_id` int(16) DEFAULT NULL COMMENT '审批记录id',
  `datasources_id` int(16) DEFAULT NULL COMMENT '连接id',
  `application_code` varchar(64) COLLATE utf8_bin DEFAULT NULL COMMENT '应用编码',
  `dir_location` varchar(4096) COLLATE utf8_bin DEFAULT NULL COMMENT '目录所在位置',
  `base_package` varchar(255) COLLATE utf8_bin DEFAULT NULL COMMENT '基础包',
  `name` varchar(128) COLLATE utf8_bin DEFAULT NULL COMMENT '数据源名称',
  `url` varchar(1024) COLLATE utf8_bin DEFAULT NULL COMMENT '文件地址',
  `tables` text COLLATE utf8_bin COMMENT '表名(,分割)',
  `content` text COLLATE utf8_bin COMMENT '内容',
  `description` varchar(255) COLLATE utf8_bin DEFAULT NULL COMMENT '描述',
  `remark` varchar(255) CHARACTER SET utf8 DEFAULT NULL COMMENT '备注',
  `gmt_created` datetime DEFAULT NULL COMMENT '创建时间',
  `creator` varchar(128) COLLATE utf8_bin DEFAULT NULL,
  `creator_dept_id` int(16) DEFAULT NULL COMMENT '创建者部门id',
  `creator_code` varchar(64) CHARACTER SET utf8 DEFAULT NULL COMMENT '创建者UID',
  `gmt_modified` datetime DEFAULT NULL COMMENT '更新时间',
  `modifier` varchar(128) COLLATE utf8_bin DEFAULT NULL,
  `modifier_code` varchar(64) CHARACTER SET utf8 DEFAULT NULL COMMENT '更新者UID',
  `audit_status` int(1) DEFAULT NULL COMMENT '审核状态  -1:待提交 0:提交审核  1:审核中 2: 审核不通过 3:审核通过',
  `status` int(1) DEFAULT NULL COMMENT ' 状态 -1:已删除 0:创建完成 1:审核中 2: 停用 3: 正常',
  `bak01` varchar(255) CHARACTER SET utf8 DEFAULT NULL,
  `bak02` varchar(255) CHARACTER SET utf8 DEFAULT NULL,
  `bak03` varchar(255) CHARACTER SET utf8 DEFAULT NULL,
  `bak04` varchar(255) CHARACTER SET utf8 DEFAULT NULL,
  `bak05` varchar(255) CHARACTER SET utf8 DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  KEY `idx_creator_dept_id` (`creator_dept_id`) USING BTREE,
  KEY `idx_status` (`status`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=569 DEFAULT CHARSET=utf8 COLLATE=utf8_bin ROW_FORMAT=DYNAMIC COMMENT='配置表';

/*Data for the table `configures` */

insert  into `configures`(`id`,`audit_id`,`datasources_id`,`application_code`,`dir_location`,`base_package`,`name`,`url`,`tables`,`content`,`description`,`remark`,`gmt_created`,`creator`,`creator_dept_id`,`creator_code`,`gmt_modified`,`modifier`,`modifier_code`,`audit_status`,`status`,`bak01`,`bak02`,`bak03`,`bak04`,`bak05`) values 
(565,NULL,567,NULL,'@echo off\r\necho \"starting copy resource code ...\"\r\necho.\r\nxcopy *.* C:\\Users\\elvin\\Desktop\\11\\onecity-bc-boss\\ /s /e /c /y /h /r\r\necho \"resource code copy finished !\"\r\npause','cn.cmcc.onecity.bc.boss','elvin测试代码脚手架生成配置',NULL,'application,application_audit,application_interface_api_relation,application_interface_api_relation_audit,article_content,button,button_audit,config,dept,dept_audit,interface_api,interface_api_audit,menu,menu_audit,role,role_audit,role_logs,role_menu_button_relation,role_menu_button_relation_audit,sequence,system_info,system_info_audit,user,user_audit,user_dept_relation,user_dept_relation_audit,user_oauth_relation,user_role_relation,user_role_relation_audit,user_trail',NULL,NULL,'暂无','2021-05-11 20:42:40','elvin',40,'BK_EMW3X7VKH','2021-07-21 20:48:29','admin','BK_000000000',NULL,3,'onecity-bc-boss',NULL,NULL,NULL,NULL),
(566,NULL,567,NULL,'c','c','www',NULL,'application',NULL,NULL,'','2021-07-20 16:50:52','elvin',40,'BK_EMW3X7VKH','2021-07-20 16:50:59','elvin','BK_EMW3X7VKH',NULL,-1,NULL,NULL,NULL,NULL,NULL),
(567,NULL,NULL,NULL,'@echo off\r\necho \"使用bat脚本来复制文件夹和文件\"\r\necho.\r\nxcopy H:\\ceshi\\*.* F:\\autotomcat\\ /s /e /c /y /h /r\r\npause','','',NULL,NULL,NULL,NULL,'','2021-07-21 10:51:35','elvin',40,'BK_EMW3X7VKH','2021-07-21 10:53:35','elvin','BK_EMW3X7VKH',NULL,-1,NULL,NULL,NULL,NULL,NULL),
(568,NULL,567,NULL,'h','','hh',NULL,'application',NULL,NULL,'h','2021-07-22 11:18:25',NULL,NULL,NULL,'2021-07-22 11:18:32',NULL,NULL,NULL,-1,'',NULL,NULL,NULL,NULL);

/*Table structure for table `configures_execute` */

DROP TABLE IF EXISTS `configures_execute`;

CREATE TABLE `configures_execute` (
  `id` int(16) NOT NULL AUTO_INCREMENT COMMENT '主键id',
  `audit_id` int(16) DEFAULT NULL COMMENT '审批记录id',
  `configures_id` int(16) DEFAULT NULL COMMENT '配置id',
  `zip_down_url` varchar(255) COLLATE utf8_bin DEFAULT NULL COMMENT 'zip包下载位置',
  `application_code` varchar(64) COLLATE utf8_bin DEFAULT NULL COMMENT '应用编码',
  `dir_location` varchar(255) COLLATE utf8_bin DEFAULT NULL COMMENT '目录所在位置',
  `base_package` varchar(255) COLLATE utf8_bin DEFAULT NULL COMMENT '基础包',
  `name` varchar(128) COLLATE utf8_bin DEFAULT NULL COMMENT '数据源名称',
  `url` varchar(1024) COLLATE utf8_bin DEFAULT NULL COMMENT '文件地址',
  `tables` text COLLATE utf8_bin COMMENT '表名(,分割)',
  `databases_info` text COLLATE utf8_bin COMMENT '连接信息',
  `templates_info` text COLLATE utf8_bin COMMENT '模板信息',
  `description` varchar(255) COLLATE utf8_bin DEFAULT NULL COMMENT '描述',
  `remark` varchar(255) CHARACTER SET utf8 DEFAULT NULL COMMENT '备注',
  `gmt_created` datetime DEFAULT NULL COMMENT '创建时间',
  `creator` varchar(128) COLLATE utf8_bin DEFAULT NULL,
  `creator_dept_id` int(16) DEFAULT NULL COMMENT '创建者部门id',
  `creator_code` varchar(64) CHARACTER SET utf8 DEFAULT NULL COMMENT '创建者UID',
  `gmt_modified` datetime DEFAULT NULL COMMENT '更新时间',
  `modifier` varchar(128) COLLATE utf8_bin DEFAULT NULL,
  `modifier_code` varchar(64) CHARACTER SET utf8 DEFAULT NULL COMMENT '更新者UID',
  `audit_status` int(1) DEFAULT NULL COMMENT '审核状态  -1:待提交 0:提交审核  1:审核中 2: 审核不通过 3:审核通过',
  `status` int(1) DEFAULT NULL COMMENT ' 状态 -1:已删除 0:创建完成 1:审核中 2: 停用 3: 正常',
  `bak01` varchar(255) CHARACTER SET utf8 DEFAULT NULL,
  `bak02` varchar(255) CHARACTER SET utf8 DEFAULT NULL,
  `bak03` varchar(255) CHARACTER SET utf8 DEFAULT NULL,
  `bak04` varchar(255) CHARACTER SET utf8 DEFAULT NULL,
  `bak05` varchar(255) CHARACTER SET utf8 DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  KEY `idx_creator_dept_id` (`creator_dept_id`) USING BTREE,
  KEY `idx_status` (`status`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=753 DEFAULT CHARSET=utf8 COLLATE=utf8_bin ROW_FORMAT=DYNAMIC COMMENT='配置执行表';

/*Data for the table `configures_execute` */

insert  into `configures_execute`(`id`,`audit_id`,`configures_id`,`zip_down_url`,`application_code`,`dir_location`,`base_package`,`name`,`url`,`tables`,`databases_info`,`templates_info`,`description`,`remark`,`gmt_created`,`creator`,`creator_dept_id`,`creator_code`,`gmt_modified`,`modifier`,`modifier_code`,`audit_status`,`status`,`bak01`,`bak02`,`bak03`,`bak04`,`bak05`) values 
(752,NULL,565,NULL,NULL,'@echo off\r\necho \"starting copy resource code ...\"\r\necho.\r\nxcopy *.* C:\\Users\\elvin\\Desktop\\11\\onecity-bc-boss\\ /s /e /c /y /h /r\r\necho \"resource code copy finished !\"\r\npause','cn.cmcc.onecity.bc.boss','elvin测试代码脚手架生成配置',NULL,'application,application_audit,application_interface_api_relation,application_interface_api_relation_audit,article_content,button,button_audit,config,dept,dept_audit,interface_api,interface_api_audit,menu,menu_audit,role,role_audit,role_logs,role_menu_button_relation,role_menu_button_relation_audit,sequence,system_info,system_info_audit,user,user_audit,user_dept_relation,user_dept_relation_audit,user_oauth_relation,user_role_relation,user_role_relation_audit,user_trail','{\"id\":567,\"name\":\"dev-boss连接\",\"url\":\"jdbc:mysql://192.168.105.151:30269/onecity-bc-boss?serverTimezone\\u003dGMT%2B8\\u0026useUnicode\\u003dtrue\\u0026characterEncoding\\u003dutf-8\\u0026useSSL\\u003dfalse\",\"username\":\"root\",\"password\":\"Root@12345\",\"remark\":\"\",\"gmtCreated\":1620793156000,\"creator\":\"elvin\",\"creatorDeptId\":40,\"creatorCode\":\"BK_EMW3X7VKH\",\"gmtModified\":1626776707000,\"modifier\":\"elvin\",\"modifierCode\":\"BK_EMW3X7VKH\",\"status\":3}','[{\"id\":565,\"name\":\"Entity.java.btl\",\"type\":\"entity\",\"remark\":\"11\",\"gmtCreated\":1620741187000,\"creator\":\"elvin\",\"creatorDeptId\":40,\"creatorCode\":\"BK_EMW3X7VKH\",\"gmtModified\":1626839727000,\"modifier\":\"elvin\",\"modifierCode\":\"BK_EMW3X7VKH\",\"status\":3,\"content\":\"package ${package.Entity};\\r\\n\\u003c% for(pkg in table.importPackages){ %\\u003e\\r\\nimport ${pkg};\\r\\n\\u003c% } %\\u003e\\r\\n\\u003c% if(swagger2){ %\\u003e\\r\\nimport io.swagger.annotations.ApiModel;\\r\\nimport io.swagger.annotations.ApiModelProperty;\\r\\n\\u003c% } %\\u003e\\r\\n\\u003c% if(entityLombokModel){ %\\u003e\\r\\nimport lombok.Data;\\r\\nimport lombok.EqualsAndHashCode;\\r\\n\\u003c% if(chainModel){ %\\u003e\\r\\nimport lombok.experimental.Accessors;\\r\\n\\u003c% } %\\u003e\\r\\n\\u003c% } %\\u003e\\r\\n/**\\r\\n * \\u003cp\\u003e\\r\\n * ${table.comment!}\\r\\n * \\u003c/p\\u003e\\r\\n *\\r\\n * @author ${author}\\r\\n * @since ${date}\\r\\n */\\r\\n\\u003c% if(entityLombokModel){ %\\u003e\\r\\n@Data\\r\\n    \\u003c% if(isNotEmpty(superEntityClass)){ %\\u003e\\r\\n@EqualsAndHashCode(callSuper \\u003d true)\\r\\n    \\u003c% }else{ %\\u003e\\r\\n@EqualsAndHashCode(callSuper \\u003d false)\\r\\n    \\u003c% } %\\u003e\\r\\n    \\u003c% if(chainModel){ %\\u003e\\r\\n@Accessors(chain \\u003d true)\\r\\n    \\u003c% } %\\u003e\\r\\n\\u003c% } %\\u003e\\r\\n\\u003c% if(table.convert){ %\\u003e\\r\\n@TableName(\\\"${table.name}\\\")\\r\\n\\u003c% } %\\u003e\\r\\n\\u003c% if(swagger2){ %\\u003e\\r\\n@ApiModel(value\\u003d\\\"${entity}对象\\\", description\\u003d\\\"${table.comment!\\u0027\\u0027}\\\")\\r\\n\\u003c% } %\\u003e\\r\\n\\u003c% if(isNotEmpty(superEntityClass)){ %\\u003e\\r\\npublic class ${entity} extends ${superEntityClass}\\u003c% if(activeRecord){ %\\u003e\\u003c${entity}\\u003e\\u003c%}%\\u003e{\\r\\n\\u003c% }else if(activeRecord){ %\\u003e\\r\\npublic class ${entity} extends Model\\u003c${entity}\\u003e {\\r\\n\\u003c% }else{ %\\u003e\\r\\npublic class ${entity} implements Serializable {\\r\\n\\u003c% } %\\u003e\\r\\n\\r\\n\\u003c% if(entitySerialVersionUID){ %\\u003e\\r\\n    private static final long serialVersionUID \\u003d 1L;\\r\\n\\u003c% } %\\u003e\\r\\n\\u003c% /** -----------BEGIN 字段循环遍历----------- **/ %\\u003e\\r\\n\\u003c% for(field in table.fields){ %\\u003e\\r\\n    \\u003c%\\r\\n    if(field.keyFlag){\\r\\n        var keyPropertyName \\u003d field.propertyName;\\r\\n    }\\r\\n    %\\u003e\\r\\n\\r\\n    \\u003c% if(isNotEmpty(field.comment)){ %\\u003e\\r\\n        \\u003c% if(swagger2){ %\\u003e\\r\\n    @ApiModelProperty(value \\u003d \\\"${field.comment}\\\")\\r\\n        \\u003c% }else{ %\\u003e\\r\\n    /**\\r\\n     * ${field.comment}\\r\\n     */\\r\\n        \\u003c% } %\\u003e\\r\\n    \\u003c% } %\\u003e\\r\\n    \\u003c% if(field.keyFlag){ %\\u003e\\r\\n    \\u003c%\\r\\n    /*主键*/\\r\\n    %\\u003e\\r\\n        \\u003c% if(field.keyIdentityFlag){ %\\u003e\\r\\n    @TableId(value \\u003d \\\"${field.annotationColumnName}\\\", type \\u003d IdType.AUTO)\\r\\n        \\u003c% }else if(isNotEmpty(idType)){ %\\u003e\\r\\n    @TableId(value \\u003d \\\"${field.annotationColumnName}\\\", type \\u003d IdType.${idType})\\r\\n        \\u003c% }else if(field.convert){ %\\u003e\\r\\n    @TableId(\\\"${field.annotationColumnName}\\\")\\r\\n         \\u003c% } %\\u003e\\r\\n    \\u003c%\\r\\n    /*普通字段*/\\r\\n    %\\u003e\\r\\n    \\u003c% }else if(isNotEmpty(field.fill)){ %\\u003e\\r\\n        \\u003c% if(field.convert){ %\\u003e\\r\\n    @TableField(value \\u003d \\\"${field.annotationColumnName}\\\", fill \\u003d FieldFill.${field.fill})\\r\\n        \\u003c% }else{ %\\u003e\\r\\n    @TableField(fill \\u003d FieldFill.${field.fill})\\r\\n        \\u003c% } %\\u003e\\r\\n    \\u003c% }else if(field.convert){ %\\u003e\\r\\n    @TableField(\\\"${field.annotationColumnName}\\\")\\r\\n    \\u003c% } %\\u003e\\r\\n    \\u003c%\\r\\n    /*乐观锁注解*/\\r\\n    %\\u003e\\r\\n    \\u003c% if(versionFieldName!\\u0027\\u0027 \\u003d\\u003d field.name){ %\\u003e\\r\\n    @Version\\r\\n    \\u003c% } %\\u003e\\r\\n    \\u003c%\\r\\n    /*逻辑删除注解*/\\r\\n    %\\u003e\\r\\n    \\u003c% if(logicDeleteFieldName!\\u0027\\u0027 \\u003d\\u003d field.name){ %\\u003e\\r\\n    @TableLogic\\r\\n    \\u003c% } %\\u003e\\r\\n    private ${field.propertyType} ${field.propertyName};\\r\\n\\u003c% } %\\u003e\\r\\n\\u003c% /** -----------END 字段循环遍历----------- **/ %\\u003e\\r\\n\\r\\n\\u003c% if(!entityLombokModel){ %\\u003e\\r\\n    \\u003c% for(field in table.fields){ %\\u003e\\r\\n        \\u003c%\\r\\n        var getprefix \\u003d\\u0027\\u0027;\\r\\n        if(field.propertyType\\u003d\\u003d\\u0027boolean\\u0027){\\r\\n            getprefix\\u003d\\u0027is\\u0027;\\r\\n        }else{\\r\\n            getprefix\\u003d\\u0027get\\u0027;\\r\\n        }\\r\\n        %\\u003e\\r\\n    public ${field.propertyType} ${getprefix}${field.capitalName}() {\\r\\n        return ${field.propertyName};\\r\\n    }\\r\\n\\r\\n        \\u003c% if(chainModel){ %\\u003e\\r\\n    public ${entity} set${field.capitalName}(${field.propertyType} ${field.propertyName}) {\\r\\n        \\u003c% }else{ %\\u003e\\r\\n    public void set${field.capitalName}(${field.propertyType} ${field.propertyName}) {\\r\\n        \\u003c% } %\\u003e\\r\\n        this.${field.propertyName} \\u003d ${field.propertyName};\\r\\n        \\u003c% if(chainModel){ %\\u003e\\r\\n        return this;\\r\\n        \\u003c% } %\\u003e\\r\\n    }\\r\\n\\r\\n    \\u003c% } %\\u003e\\r\\n\\u003c% } %\\u003e\\r\\n\\u003c% if(entityColumnConstant){ %\\u003e\\r\\n   \\u003c% for(field in table.fields){ %\\u003e\\r\\n    public static final String ${strutil.toUpperCase(field.name)} \\u003d \\\"${field.name}\\\";\\r\\n\\r\\n   \\u003c% } %\\u003e\\r\\n\\u003c% } %\\u003e\\r\\n\\u003c% if(activeRecord){ %\\u003e\\r\\n    @Override\\r\\n    protected Serializable pkVal() {\\r\\n    \\u003c% if(isNotEmpty(keyPropertyName)){ %\\u003e\\r\\n        return this.${keyPropertyName};\\r\\n    \\u003c% }else{ %\\u003e\\r\\n        return null;\\r\\n    \\u003c% } %\\u003e\\r\\n    }\\r\\n\\r\\n\\u003c% } %\\u003e\\r\\n\\u003c% if(!entityLombokModel){ %\\u003e\\r\\n    @Override\\r\\n    public String toString() {\\r\\n        return \\\"${entity}{\\\" +\\r\\n    \\u003c% for(field in table.fields){ %\\u003e\\r\\n       \\u003c% if(fieldLP.index\\u003d\\u003d0){ %\\u003e\\r\\n        \\\"${field.propertyName}\\u003d\\\" + ${field.propertyName} +\\r\\n       \\u003c% }else{ %\\u003e\\r\\n        \\\", ${field.propertyName}\\u003d\\\" + ${field.propertyName} +\\r\\n       \\u003c% } %\\u003e\\r\\n    \\u003c% } %\\u003e\\r\\n        \\\"}\\\";\\r\\n    }\\r\\n\\u003c% } %\\u003e\\r\\n}\"},{\"id\":566,\"name\":\"Controller.java.btl\",\"type\":\"controller\",\"gmtCreated\":1620804868000,\"creator\":\"elvin\",\"creatorDeptId\":40,\"creatorCode\":\"BK_EMW3X7VKH\",\"gmtModified\":1626839304000,\"modifier\":\"elvin\",\"modifierCode\":\"BK_EMW3X7VKH\",\"status\":3,\"content\":\"package ${package.Controller};\\r\\n\\r\\nimport org.springframework.web.bind.annotation.RequestMapping;\\r\\nimport org.springframework.beans.factory.annotation.Autowired;\\r\\nimport org.springframework.web.bind.annotation.RestController;\\r\\nimport ${package.Service}.${table.serviceName};\\r\\n\\r\\n@RestController\\r\\n@RequestMapping(\\\"/${table.entityPath}\\\")\\r\\npublic class ${table.controllerName} {\\r\\n\\r\\n    @Autowired\\r\\n    private ${table.serviceName} ${table.entityPath}Service;\\r\\n    \\r\\n    \\r\\n\\r\\n}\"},{\"id\":567,\"name\":\"Service.java.btl\",\"type\":\"service\",\"gmtCreated\":1622019940000,\"creator\":\"elvin\",\"creatorDeptId\":40,\"creatorCode\":\"BK_EMW3X7VKH\",\"gmtModified\":1626839290000,\"modifier\":\"elvin\",\"modifierCode\":\"BK_EMW3X7VKH\",\"status\":3,\"content\":\"package ${package.Service};\\r\\n\\r\\nimport cn.cmcc.onecity.bc.commons.call.CommonResponse;\\r\\nimport cn.cmcc.onecity.bc.commons.call.PageResponse;\\r\\nimport ${package.Service}.entity.${table.entityName};\\r\\nimport ${package.Service}.entity.query.${table.entityName}Query;\\r\\nimport com.baomidou.mybatisplus.extension.service.IService;\\r\\nimport java.util.List;\\r\\n\\r\\npublic interface ${table.entityName}Service extends IService\\u003c${table.entityName}\\u003e {\\r\\n\\r\\n    /**\\r\\n    * 批量查询接口\\r\\n    * @param ids\\r\\n    * @return\\r\\n    */\\r\\n    CommonResponse\\u003cList\\u003c${table.entityName}\\u003e\\u003e selectByIds(List\\u003cInteger\\u003e ids);\\r\\n\\r\\n    /**\\r\\n    * 单查接口\\r\\n    * @param id\\r\\n    * @return\\r\\n    */\\r\\n    CommonResponse\\u003c${table.entityName}\\u003e selectById(Integer id);\\r\\n\\r\\n    /**\\r\\n    * 分页查询接口\\r\\n    * @param query\\r\\n    * @return\\r\\n    */\\r\\n    PageResponse\\u003c${table.entityName}\\u003e selectByPage(${table.entityName}Query query);\\r\\n\\r\\n     /**\\r\\n     * 新增或修改编辑接口\\r\\n     * @param query\\r\\n     * @return\\r\\n     */\\r\\n     CommonResponse saveOrEdit(${table.entityName}Query query);\\r\\n\\r\\n     /**\\r\\n     * 批量删除接口\\r\\n     * 批量删除\\r\\n     * @param ids\\r\\n     */\\r\\n     CommonResponse deleteBatch(String ids);\\r\\n}\"},{\"id\":568,\"name\":\"ServiceImpl.java.btl\",\"type\":\"serviceImpl\",\"gmtCreated\":1622019982000,\"creator\":\"elvin\",\"creatorDeptId\":40,\"creatorCode\":\"BK_EMW3X7VKH\",\"gmtModified\":1626875106000,\"modifier\":\"elvin\",\"modifierCode\":\"BK_EMW3X7VKH\",\"status\":3,\"content\":\"package ${package.Service}.impl;\\r\\n\\r\\nimport cn.cmcc.onecity.bc.commons.call.CommonResponse;\\r\\nimport cn.cmcc.onecity.bc.commons.call.PageResponse;\\r\\nimport cn.cmcc.onecity.bc.commons.log.BaseLogger;\\r\\nimport cn.cmcc.onecity.bc.commons.status.StatusConstants;\\r\\nimport cn.cmcc.onecity.bc.utils.DateUtil;\\r\\nimport cn.cmcc.onecity.bc.utils.JsonUtil;\\r\\nimport cn.cmcc.onecity.bc.utils.StringUtil;\\r\\nimport ${package.Mapper}.${table.entityName}Mapper;\\r\\nimport ${package.Entity}.${table.entityName};\\r\\nimport ${package.Entity}.constants.SystemReturnEnum;\\r\\nimport ${package.Entity}.exceptions.SystemException;\\r\\nimport ${package.Entity}.vo.${table.entityName}Query;\\r\\nimport ${package.Service}.${table.entityName}Service;\\r\\nimport com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;\\r\\nimport com.baomidou.mybatisplus.extension.plugins.pagination.Page;\\r\\nimport com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;\\r\\nimport com.github.pagehelper.PageHelper;\\r\\nimport com.github.pagehelper.PageInfo;\\r\\nimport org.slf4j.Logger;\\r\\nimport org.slf4j.LoggerFactory;\\r\\nimport org.springframework.beans.factory.annotation.Autowired;\\r\\nimport org.springframework.stereotype.Service;\\r\\nimport org.springframework.transaction.annotation.Isolation;\\r\\nimport org.springframework.transaction.annotation.Propagation;\\r\\nimport org.springframework.transaction.annotation.Transactional;\\r\\nimport org.springframework.util.ObjectUtils;\\r\\nimport java.util.ArrayList;\\r\\nimport java.util.Arrays;\\r\\nimport java.util.List;\\r\\n\\r\\n@Service(\\\"${table.entityPath}Service\\\")\\r\\n@Transactional(propagation \\u003d Propagation.REQUIRED,isolation\\u003d Isolation.DEFAULT ,rollbackFor \\u003d Exception.class)\\r\\npublic class ${table.entityName}ServiceImpl extends ServiceImpl\\u003c${table.entityName}Mapper, ${table.entityName}\\u003e implements ${table.entityName}Service{\\r\\n\\r\\n    private final static BaseLogger LOGGER \\u003d BaseLogger.getLogger(${table.entityName}ServiceImpl.class);\\r\\n\\r\\n    @Autowired\\r\\n    ${table.entityName}Mapper ${table.entityPath}Mapper;\\r\\n\\r\\n    public CommonResponse\\u003cList\\u003c${table.entityName}\\u003e\\u003e selectByIds(List\\u003cInteger\\u003e ids) {\\r\\n        return new CommonResponse.Builder().buildSuccess(${table.entityPath}Mapper.selectBatchIds(ids));\\r\\n    }\\r\\n\\r\\n    public CommonResponse\\u003c${table.entityName}\\u003e selectById(Integer id) {\\r\\n        return new CommonResponse.Builder().buildSuccess(${table.entityPath}Mapper.selectById(id));\\r\\n    }\\r\\n\\r\\n    public PageResponse\\u003c${table.entityName}\\u003e selectByPage(${table.entityName}Query ${table.entityPath}Query) {\\r\\n        List\\u003c${table.entityName}\\u003e list \\u003d ${table.entityPath}Mapper.selectList(assExampleForList(${table.entityPath}Query));\\r\\n        PageHelper.startPage((${table.entityPath}Query).getPage(),(${table.entityPath}Query).getPageSize());\\r\\n        PageInfo\\u003c${table.entityName}\\u003e pageInfo \\u003d new PageInfo\\u003c${table.entityName}\\u003e(list);\\r\\n        return new PageResponse.Builder().build(list,pageInfo.getPageNum(),pageInfo.getPageSize(),pageInfo.getTotal());\\r\\n    }\\r\\n\\r\\n    public CommonResponse saveOrEdit(${table.entityName}Query query) {\\r\\n        this.validateParamForSaveOrEdit(query);\\r\\n        if(!ObjectUtils.isEmpty(query.getId())){\\r\\n        ${table.entityPath}Mapper.updateById(query);\\r\\n        }\\r\\n        ${table.entityPath}Mapper.insert(query);\\r\\n        return new CommonResponse.Builder().buildSuccess();\\r\\n    }\\r\\n\\r\\n    public CommonResponse deleteBatch(String ids) {\\r\\n        String trimIds \\u003d ids.trim();\\r\\n        String[] split \\u003d trimIds.split(\\\",\\\");\\r\\n        if(StringUtil.isEmpty(trimIds) || split.length\\u003c1){\\r\\n        throw new SystemException(SystemReturnEnum.DELETE_BATCH_IDS_NULL);\\r\\n        }\\r\\n        List\\u003cInteger\\u003e idList \\u003d JsonUtil.parseArray(JsonUtil.toJSONString(Arrays.asList(split)), Integer.class);\\r\\n        ${table.entityName} ${table.entityPath} \\u003d new ${table.entityName}();\\r\\n        ${table.entityPath}.setStatus(3);\\r\\n        this.update(${table.entityPath},new QueryWrapper\\u003c${table.entityName}\\u003e().in(\\\"id\\\",idList));\\r\\n        return new CommonResponse.Builder().buildSuccess();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * 参数校验\\r\\n    * @param query\\r\\n    */\\r\\n    private void validateParamForSaveOrEdit(${table.entityName}Query query){\\r\\n        // TODO\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * 组装分页参数\\r\\n    * @param query\\r\\n    * @return\\r\\n    */\\r\\n    private QueryWrapper assExampleForList(${table.entityName}Query query) {\\r\\n        QueryWrapper\\u003c${table.entityName}\\u003e queryWrapper \\u003d new QueryWrapper\\u003c${table.entityName}\\u003e();\\r\\n        // TODO\\r\\n        return queryWrapper;\\r\\n    }\\r\\n}\"},{\"id\":569,\"name\":\"Mapper.xml.btl\",\"type\":\"xml\",\"gmtCreated\":1622020020000,\"creator\":\"elvin\",\"creatorDeptId\":40,\"creatorCode\":\"BK_EMW3X7VKH\",\"gmtModified\":1626839299000,\"modifier\":\"elvin\",\"modifierCode\":\"BK_EMW3X7VKH\",\"status\":3,\"content\":\"\\u003c?xml version\\u003d\\\"1.0\\\" encoding\\u003d\\\"UTF-8\\\"?\\u003e\\r\\n\\u003c!DOCTYPE mapper PUBLIC \\\"-//mybatis.org//DTD Mapper 3.0//EN\\\" \\\"http://mybatis.org/dtd/mybatis-3-mapper.dtd\\\"\\u003e\\r\\n\\u003cmapper namespace\\u003d\\\"${package.Mapper}.${table.mapperName}\\\"\\u003e\\r\\n\\r\\n    \\u003c!-- 通用设置 --\\u003e\\r\\n\\u003c#if baseColumnList\\u003e\\r\\n    \\u003c!-- 通用查询列 --\\u003e\\r\\n    \\u003csql id\\u003d\\\"Base_Column_List\\\"\\u003e\\r\\n        \\u003c#list table.commonFields as field\\u003e\\r\\n            ${field.name},\\r\\n        \\u003c/#list\\u003e\\r\\n        ${table.fieldNames}\\r\\n    \\u003c/sql\\u003e\\r\\n\\r\\n    \\u003c!-- 通用条件列 --\\u003e\\r\\n    \\u003csql id\\u003d\\\"${entity}ByCondition\\\"\\u003e\\r\\n    \\u003c#list table.commonFields as field\\u003e\\u003c#--生成公共字段--\\u003e\\r\\n        \\u003cif test\\u003d\\\"${field.propertyName}!\\u003dnull and ${field.propertyName}!\\u003d\\u0027\\u0027\\\"\\u003e\\r\\n            AND ${field.name} \\u003d ${r\\\"#{\\\"}${field.propertyName}${r\\\"}\\\"}\\r\\n        \\u003c/if\\u003e\\r\\n    \\u003c/#list\\u003e\\r\\n    \\u003c#list table.fields as field\\u003e\\r\\n        \\u003c#if !field.keyFlag\\u003e\\u003c#--生成普通字段 --\\u003e\\r\\n            \\u003cif test\\u003d\\\"${field.propertyName}!\\u003dnull and ${field.propertyName}!\\u003d\\u0027\\u0027\\\"\\u003e\\r\\n                AND ${field.name} \\u003d ${r\\\"#{\\\"}${field.propertyName}${r\\\"}\\\"}\\r\\n            \\u003c/if\\u003e\\r\\n        \\u003c/#if\\u003e\\r\\n    \\u003c/#list\\u003e\\r\\n    \\u003c/sql\\u003e\\r\\n\\r\\n    \\u003c!-- 通用设置列 --\\u003e\\r\\n    \\u003csql id\\u003d\\\"${entity}SetColumns\\\"\\u003e\\r\\n    \\u003c#list table.commonFields as field\\u003e\\u003c#--生成公共字段--\\u003e\\r\\n        \\u003cif test\\u003d\\\"${field.propertyName}!\\u003dnull and ${field.propertyName}!\\u003d\\u0027\\u0027\\\"\\u003e\\r\\n            ${field.name} \\u003d ${r\\\"#{\\\"}${field.propertyName}${r\\\"}\\\"},\\r\\n        \\u003c/if\\u003e\\r\\n    \\u003c/#list\\u003e\\r\\n    \\u003c#list table.fields as field\\u003e\\r\\n        \\u003c#if !field.keyFlag\\u003e\\u003c#--生成普通字段 --\\u003e\\r\\n            \\u003cif test\\u003d\\\"${field.propertyName}!\\u003dnull and ${field.propertyName}!\\u003d\\u0027\\u0027\\\"\\u003e\\r\\n                ${field.name} \\u003d ${r\\\"#{\\\"}${field.propertyName}${r\\\"}\\\"},\\r\\n            \\u003c/if\\u003e\\r\\n        \\u003c/#if\\u003e\\r\\n    \\u003c/#list\\u003e\\r\\n    \\u003c/sql\\u003e\\r\\n\\u003c/#if\\u003e\\r\\n\\r\\n\\u003c#if baseResultMap\\u003e\\r\\n    \\u003c!-- 通用查询映射结果 --\\u003e\\r\\n    \\u003cresultMap id\\u003d\\\"${entity}Map\\\" type\\u003d\\\"${package.Entity}.${entity}\\\"\\u003e\\r\\n    \\u003c#list table.fields as field\\u003e\\r\\n        \\u003c#if field.keyFlag\\u003e\\u003c#--生成主键排在第一位--\\u003e\\r\\n            \\u003cid column\\u003d\\\"${field.name}\\\" property\\u003d\\\"${field.propertyName}\\\"/\\u003e\\r\\n        \\u003c/#if\\u003e\\r\\n    \\u003c/#list\\u003e\\r\\n    \\u003c#list table.commonFields as field\\u003e\\u003c#--生成公共字段 --\\u003e\\r\\n        \\u003cresult column\\u003d\\\"${field.name}\\\" property\\u003d\\\"${field.propertyName}\\\"/\\u003e\\r\\n    \\u003c/#list\\u003e\\r\\n    \\u003c#list table.fields as field\\u003e\\r\\n        \\u003c#if !field.keyFlag\\u003e\\u003c#--生成普通字段 --\\u003e\\r\\n            \\u003cresult column\\u003d\\\"${field.name}\\\" property\\u003d\\\"${field.propertyName}\\\"/\\u003e\\r\\n        \\u003c/#if\\u003e\\r\\n    \\u003c/#list\\u003e\\r\\n    \\u003c/resultMap\\u003e\\r\\n\\u003c/#if\\u003e\\r\\n\\r\\n    \\u003c!-- 查询表${table.name}所有信息 --\\u003e\\r\\n    \\u003cselect id\\u003d\\\"findAll${entity}\\\" resultMap\\u003d\\\"${entity}Map\\\"\\u003e\\r\\n        SELECT\\r\\n        \\u003cinclude refid\\u003d\\\"Base_Column_List\\\"/\\u003e\\r\\n        FROM ${table.name}\\r\\n    \\u003c/select\\u003e\\r\\n\\r\\n\\u003c#list table.fields as field\\u003e\\r\\n\\u003c#if field.keyFlag\\u003e\\r\\n    \\u003c!-- 根据主键${field.propertyName}查询表${table.name}信息 --\\u003e\\r\\n    \\u003cselect id\\u003d\\\"find${entity}By${field.propertyName}\\\" resultMap\\u003d\\\"${entity}Map\\\"\\u003e\\r\\n        SELECT\\r\\n        \\u003cinclude refid\\u003d\\\"Base_Column_List\\\"/\\u003e\\r\\n        FROM ${table.name}\\r\\n        WHERE ${field.name}\\u003d${r\\\"#{\\\"}${field.propertyName}${r\\\"}\\\"}\\r\\n    \\u003c/select\\u003e\\r\\n\\u003c/#if\\u003e\\r\\n\\u003c/#list\\u003e\\r\\n\\r\\n    \\u003c!-- 根据条件查询表${table.name}信息 --\\u003e\\r\\n    \\u003cselect id\\u003d\\\"find${entity}ByCondition\\\" resultMap\\u003d\\\"${entity}Map\\\"\\u003e\\r\\n        SELECT\\r\\n        \\u003cinclude refid\\u003d\\\"Base_Column_List\\\"/\\u003e\\r\\n        FROM ${table.name}\\r\\n        WHERE 1\\u003d1\\r\\n        \\u003cinclude refid\\u003d\\\"${entity}ByCondition\\\" /\\u003e\\r\\n    \\u003c/select\\u003e\\r\\n\\r\\n\\u003c#list table.fields as field\\u003e\\r\\n\\u003c#if field.keyFlag\\u003e\\r\\n    \\u003c!-- 根据主键${field.propertyName}删除表${table.name}信息 --\\u003e\\r\\n    \\u003cdelete id\\u003d\\\"delete${entity}By${field.propertyName}\\\"\\u003e\\r\\n        DELETE FROM\\r\\n        ${table.name}\\r\\n        WHERE ${field.name}\\u003d${r\\\"#{\\\"}${field.propertyName}${r\\\"}\\\"}\\r\\n    \\u003c/delete\\u003e\\r\\n\\u003c/#if\\u003e\\r\\n\\u003c/#list\\u003e\\r\\n\\r\\n\\u003c#list table.fields as field\\u003e\\r\\n\\u003c#if field.keyFlag\\u003e\\r\\n    \\u003c!-- 根据主键${field.propertyName}更新表${table.name}信息 --\\u003e\\r\\n    \\u003cupdate id\\u003d\\\"update${entity}By${field.propertyName}\\\" parameterType\\u003d\\\"${package.Entity}.${entity}\\\"\\u003e\\r\\n        UPDATE ${table.name}\\r\\n        \\u003cset\\u003e\\r\\n            \\u003cinclude refid\\u003d\\\"${entity}SetColumns\\\"/\\u003e\\r\\n        \\u003c/set\\u003e\\r\\n        WHERE\\r\\n        \\u003c#list table.fields as field\\u003e\\u003c#if field.keyFlag\\u003e${field.name}\\u003d${r\\\"#{\\\"}${field.propertyName}${r\\\"}\\\"}\\u003c/#if\\u003e\\u003c/#list\\u003e\\r\\n    \\u003c/update\\u003e\\r\\n\\u003c/#if\\u003e\\r\\n\\u003c/#list\\u003e\\r\\n\\r\\n\\u003c#list table.fields as field\\u003e\\r\\n\\u003c#if field.keyFlag\\u003e\\r\\n    \\u003c!-- 新增表${table.name}信息 --\\u003e\\r\\n    \\u003cinsert id\\u003d\\\"add${entity}\\\"\\u003e\\r\\n        INSERT INTO ${table.name} (\\r\\n        \\u003c#list table.fields as field\\u003e\\r\\n            \\u003c#if field_index gt 0\\u003e,\\u003c/#if\\u003e${field.name}\\r\\n            \\u003c/#list\\u003e\\r\\n        ) VALUES (\\r\\n        \\u003c#list table.fields as field\\u003e\\r\\n            \\u003c#if field_index gt 0\\u003e,\\u003c/#if\\u003e${r\\\"#{\\\"}${field.propertyName}${r\\\"}\\\"}\\r\\n            \\u003c/#list\\u003e\\r\\n        )\\r\\n    \\u003c/insert\\u003e\\r\\n\\u003c/#if\\u003e\\r\\n\\u003c/#list\\u003e\\r\\n\\u003c/mapper\\u003e\"},{\"id\":570,\"name\":\"Mapper.java.btl\",\"type\":\"dao\",\"gmtCreated\":1622020047000,\"creator\":\"elvin\",\"creatorDeptId\":40,\"creatorCode\":\"BK_EMW3X7VKH\",\"gmtModified\":1626839281000,\"modifier\":\"elvin\",\"modifierCode\":\"BK_EMW3X7VKH\",\"status\":3,\"content\":\"package ${package.Mapper};\\r\\n\\r\\nimport ${package.Entity}.${entity};\\r\\nimport java.util.List;\\r\\nimport org.apache.ibatis.annotations.Param;\\r\\n\\r\\npublic interface ${table.mapperName}{\\r\\n    \\r\\n     /**\\r\\n      *  查询表${table.name}所有信息\\r\\n      */\\r\\n     List\\u003c${entity}\\u003e findAll${entity}();\\r\\n      \\r\\n    \\u003c#list table.fields as field\\u003e\\r\\n    \\u003c#if field.keyFlag\\u003e\\r\\n     /**\\r\\n      *  根据主键${field.propertyName}查询表${table.name}信息\\r\\n      *  @param ${field.propertyName}\\r\\n      */\\r\\n     ${entity} find${entity}By${field.propertyName}(@Param(\\\"${field.propertyName}\\\") ${field.propertyType} ${field.propertyName});\\r\\n    \\u003c/#if\\u003e\\r\\n    \\u003c/#list\\u003e\\r\\n\\r\\n    /**\\r\\n    *  根据条件查询表${table.name}信息\\r\\n    *  @param ${table.entityPath}\\r\\n    */\\r\\n    List\\u003c${entity}\\u003e find${entity}ByCondition(${entity} ${table.entityPath});\\r\\n\\r\\n    \\u003c#list table.fields as field\\u003e\\r\\n    \\u003c#if field.keyFlag\\u003e\\r\\n     /**\\r\\n      *  根据主键${field.propertyName}查询表${table.name}信息\\r\\n      *  @param ${field.propertyName}\\r\\n      */\\r\\n     Integer delete${entity}By${field.propertyName}(@Param(\\\"${field.propertyName}\\\") ${field.propertyType} ${field.propertyName});\\r\\n    \\u003c/#if\\u003e\\r\\n    \\u003c/#list\\u003e\\r\\n    \\r\\n    \\u003c#list table.fields as field\\u003e\\r\\n    \\u003c#if field.keyFlag\\u003e\\r\\n     /**\\r\\n      *  根据主键${field.propertyName}更新表${table.name}信息\\r\\n      *  @param ${table.entityPath}\\r\\n      */\\r\\n     Integer update${entity}By${field.propertyName}(${entity} ${table.entityPath});\\r\\n    \\u003c/#if\\u003e\\r\\n    \\u003c/#list\\u003e\\r\\n    \\r\\n    \\u003c#list table.fields as field\\u003e\\r\\n    \\u003c#if field.keyFlag\\u003e\\r\\n     /**\\r\\n      *  新增表${table.name}信息\\r\\n      *  @param ${table.entityPath}\\r\\n      */\\r\\n     Integer add${entity}(${entity} ${table.entityPath});\\r\\n    \\u003c/#if\\u003e\\r\\n    \\u003c/#list\\u003e\\r\\n    \\r\\n}\"},{\"id\":571,\"name\":\"Query.java.btl\",\"type\":\"query\",\"gmtCreated\":1622427942000,\"creator\":\"dongzuozheng\",\"creatorDeptId\":40,\"creatorCode\":\"OC_EKDI11N5J\",\"gmtModified\":1622527731000,\"modifier\":\"dongzuozheng\",\"modifierCode\":\"OC_EKDI11N5J\",\"status\":3,\"content\":\"package ${package.Entity}.query;\\r\\n\\r\\nimport ${package.Entity}.${table.entityName};\\r\\n\\r\\npublic class ${table.entityName}Query extends ${table.entityName} {\\r\\n\\r\\n    /** 当前页码*/\\r\\n    private Integer page;\\r\\n    /** 页长*/\\r\\n    private Integer pageSize;\\r\\n    /** 起始时间*/\\r\\n    private String startTime;\\r\\n    /** 截止时间*/\\r\\n    private String endTime;\\r\\n    /** 状态*/\\r\\n    private String states;\\r\\n\\r\\n    public Integer getPage() {\\r\\n        return page;\\r\\n    }\\r\\n\\r\\n    public void setPage(Integer page) {\\r\\n        this.page \\u003d page;\\r\\n    }\\r\\n\\r\\n    public Integer getPageSize() {\\r\\n        return pageSize;\\r\\n    }\\r\\n\\r\\n    public void setPageSize(Integer pageSize) {\\r\\n        this.pageSize \\u003d pageSize;\\r\\n    }\\r\\n\\r\\n    public String getStartTime() {\\r\\n        return startTime;\\r\\n    }\\r\\n\\r\\n    public void setStartTime(String startTime) {\\r\\n        this.startTime \\u003d startTime;\\r\\n    }\\r\\n\\r\\n    public String getEndTime() {\\r\\n        return endTime;\\r\\n    }\\r\\n\\r\\n    public void setEndTime(String endTime) {\\r\\n        this.endTime \\u003d endTime;\\r\\n    }\\r\\n\\r\\n    public String getStates() {\\r\\n        return states;\\r\\n    }\\r\\n\\r\\n    public void setStates(String states) {\\r\\n        this.states \\u003d states;\\r\\n    }\\r\\n}\"}]',NULL,'暂无','2021-07-22 11:09:25','elvin',40,'BK_EMW3X7VKH','2021-07-22 11:09:25','admin','BK_000000000',NULL,6,'onecity-bc-boss',NULL,NULL,NULL,NULL);

/*Table structure for table `configures_templates_relation` */

DROP TABLE IF EXISTS `configures_templates_relation`;

CREATE TABLE `configures_templates_relation` (
  `id` int(16) NOT NULL AUTO_INCREMENT COMMENT '主键id',
  `audit_id` int(16) DEFAULT NULL COMMENT '审批记录id',
  `application_code` varchar(128) COLLATE utf8_bin DEFAULT NULL COMMENT '申请授权应用',
  `templates_id` int(16) DEFAULT NULL COMMENT '模板id',
  `configures_id` int(16) DEFAULT NULL COMMENT '配置id',
  `description` varchar(255) COLLATE utf8_bin DEFAULT NULL,
  `remark` varchar(255) CHARACTER SET utf8 DEFAULT NULL,
  `gmt_created` datetime DEFAULT NULL COMMENT '创建时间',
  `creator` varchar(128) COLLATE utf8_bin DEFAULT NULL,
  `creator_dept_id` int(16) DEFAULT NULL COMMENT '创建者部门id',
  `creator_code` varchar(64) CHARACTER SET utf8 DEFAULT NULL,
  `gmt_modified` datetime DEFAULT NULL COMMENT '更新时间',
  `modifier` varchar(128) COLLATE utf8_bin DEFAULT NULL,
  `modifier_code` varchar(64) CHARACTER SET utf8 DEFAULT NULL,
  `audit_status` int(1) DEFAULT NULL COMMENT '审核状态  -1:待提交 0:提交审核  1:审核中 2: 审核不通过 3:审核通过',
  `status` int(1) DEFAULT NULL COMMENT ' 状态 -1:已删除 0:创建完成 1:审核中 2: 停用 3: 正常',
  `bak01` varchar(255) CHARACTER SET utf8 DEFAULT NULL,
  `bak02` varchar(255) CHARACTER SET utf8 DEFAULT NULL,
  `bak03` varchar(255) CHARACTER SET utf8 DEFAULT NULL,
  `bak04` varchar(255) CHARACTER SET utf8 DEFAULT NULL,
  `bak05` varchar(255) CHARACTER SET utf8 DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=282 DEFAULT CHARSET=utf8 COLLATE=utf8_bin ROW_FORMAT=DYNAMIC COMMENT='配置和模板关系表';

/*Data for the table `configures_templates_relation` */

insert  into `configures_templates_relation`(`id`,`audit_id`,`application_code`,`templates_id`,`configures_id`,`description`,`remark`,`gmt_created`,`creator`,`creator_dept_id`,`creator_code`,`gmt_modified`,`modifier`,`modifier_code`,`audit_status`,`status`,`bak01`,`bak02`,`bak03`,`bak04`,`bak05`) values 
(53,NULL,NULL,565,566,NULL,NULL,'2021-07-20 16:50:52','elvin',40,'BK_EMW3X7VKH','2021-07-20 16:50:52','elvin','BK_EMW3X7VKH',NULL,3,NULL,NULL,NULL,NULL,NULL),
(54,NULL,NULL,566,566,NULL,NULL,'2021-07-20 16:50:52','elvin',40,'BK_EMW3X7VKH','2021-07-20 16:50:52','elvin','BK_EMW3X7VKH',NULL,3,NULL,NULL,NULL,NULL,NULL),
(274,NULL,NULL,565,565,NULL,NULL,'2021-07-21 20:48:29','admin',1,'BK_000000000','2021-07-21 20:48:29','admin','BK_000000000',NULL,3,NULL,NULL,NULL,NULL,NULL),
(275,NULL,NULL,566,565,NULL,NULL,'2021-07-21 20:48:29','admin',1,'BK_000000000','2021-07-21 20:48:29','admin','BK_000000000',NULL,3,NULL,NULL,NULL,NULL,NULL),
(276,NULL,NULL,567,565,NULL,NULL,'2021-07-21 20:48:29','admin',1,'BK_000000000','2021-07-21 20:48:29','admin','BK_000000000',NULL,3,NULL,NULL,NULL,NULL,NULL),
(277,NULL,NULL,568,565,NULL,NULL,'2021-07-21 20:48:29','admin',1,'BK_000000000','2021-07-21 20:48:29','admin','BK_000000000',NULL,3,NULL,NULL,NULL,NULL,NULL),
(278,NULL,NULL,569,565,NULL,NULL,'2021-07-21 20:48:29','admin',1,'BK_000000000','2021-07-21 20:48:29','admin','BK_000000000',NULL,3,NULL,NULL,NULL,NULL,NULL),
(279,NULL,NULL,570,565,NULL,NULL,'2021-07-21 20:48:29','admin',1,'BK_000000000','2021-07-21 20:48:29','admin','BK_000000000',NULL,3,NULL,NULL,NULL,NULL,NULL),
(280,NULL,NULL,571,565,NULL,NULL,'2021-07-21 20:48:29','admin',1,'BK_000000000','2021-07-21 20:48:29','admin','BK_000000000',NULL,3,NULL,NULL,NULL,NULL,NULL),
(281,NULL,NULL,579,568,NULL,NULL,'2021-07-22 11:18:25',NULL,NULL,NULL,'2021-07-22 11:18:25',NULL,NULL,NULL,3,NULL,NULL,NULL,NULL,NULL);

/*Table structure for table `datasources` */

DROP TABLE IF EXISTS `datasources`;

CREATE TABLE `datasources` (
  `id` int(16) NOT NULL AUTO_INCREMENT COMMENT '主键id',
  `audit_id` int(16) DEFAULT NULL COMMENT '审批记录id',
  `application_code` varchar(64) COLLATE utf8_bin DEFAULT NULL,
  `name` varchar(128) COLLATE utf8_bin DEFAULT NULL COMMENT '数据源名称',
  `url` varchar(1024) COLLATE utf8_bin DEFAULT NULL,
  `username` varchar(128) COLLATE utf8_bin DEFAULT NULL COMMENT '用户名',
  `password` varchar(128) COLLATE utf8_bin DEFAULT NULL COMMENT '密码',
  `database_name` varchar(128) COLLATE utf8_bin DEFAULT NULL COMMENT '数据库名称',
  `description` varchar(255) COLLATE utf8_bin DEFAULT NULL COMMENT '描述',
  `remark` varchar(255) CHARACTER SET utf8 DEFAULT NULL COMMENT '备注',
  `gmt_created` datetime DEFAULT NULL COMMENT '创建时间',
  `creator` varchar(128) COLLATE utf8_bin DEFAULT NULL,
  `creator_dept_id` int(16) DEFAULT NULL COMMENT '创建者部门id',
  `creator_code` varchar(64) CHARACTER SET utf8 DEFAULT NULL COMMENT '创建者UID',
  `gmt_modified` datetime DEFAULT NULL COMMENT '更新时间',
  `modifier` varchar(128) COLLATE utf8_bin DEFAULT NULL,
  `modifier_code` varchar(64) CHARACTER SET utf8 DEFAULT NULL COMMENT '更新者UID',
  `audit_status` int(1) DEFAULT NULL COMMENT '审核状态  -1:待提交 0:提交审核  1:审核中 2: 审核不通过 3:审核通过',
  `status` int(1) DEFAULT NULL COMMENT ' 状态 -1:已删除 0:创建完成 1:审核中 2: 停用 3: 正常',
  `bak01` varchar(255) CHARACTER SET utf8 DEFAULT NULL,
  `bak02` varchar(255) CHARACTER SET utf8 DEFAULT NULL,
  `bak03` varchar(255) CHARACTER SET utf8 DEFAULT NULL,
  `bak04` varchar(255) CHARACTER SET utf8 DEFAULT NULL,
  `bak05` varchar(255) CHARACTER SET utf8 DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  KEY `idx_creator_dept_id` (`creator_dept_id`) USING BTREE,
  KEY `idx_status` (`status`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=569 DEFAULT CHARSET=utf8 COLLATE=utf8_bin ROW_FORMAT=DYNAMIC COMMENT='应用表';

/*Data for the table `datasources` */

insert  into `datasources`(`id`,`audit_id`,`application_code`,`name`,`url`,`username`,`password`,`database_name`,`description`,`remark`,`gmt_created`,`creator`,`creator_dept_id`,`creator_code`,`gmt_modified`,`modifier`,`modifier_code`,`audit_status`,`status`,`bak01`,`bak02`,`bak03`,`bak04`,`bak05`) values 
(565,NULL,NULL,'连接名称','url','用户名','密码',NULL,NULL,'备注','2021-05-11 21:31:50','elvin',40,'BK_EMW3X7VKH','2021-05-11 22:16:10','elvin','BK_EMW3X7VKH',NULL,-1,NULL,NULL,NULL,NULL,NULL),
(566,NULL,NULL,'test-generator连接','jdbc:mysql://192.168.105.151:32212/onecity-bc-generator?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf-8&useSSL=false','root','Root@12345',NULL,NULL,'备注','2021-05-11 22:16:43','elvin',40,'BK_EMW3X7VKH','2021-07-20 18:25:21','elvin','BK_EMW3X7VKH',NULL,3,NULL,NULL,NULL,NULL,NULL),
(567,NULL,NULL,'dev-boss连接','jdbc:mysql://192.168.105.151:30269/onecity-bc-boss?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf-8&useSSL=false','root','Root@12345',NULL,NULL,'','2021-05-12 12:19:16','elvin',40,'BK_EMW3X7VKH','2021-07-20 18:25:07','elvin','BK_EMW3X7VKH',NULL,3,NULL,NULL,NULL,NULL,NULL),
(568,NULL,NULL,'gg','g','g','g',NULL,NULL,'g','2021-07-22 11:18:01',NULL,NULL,NULL,'2021-07-22 11:18:03',NULL,NULL,NULL,-1,NULL,NULL,NULL,NULL,NULL);

/*Table structure for table `templates` */

DROP TABLE IF EXISTS `templates`;

CREATE TABLE `templates` (
  `id` int(16) NOT NULL AUTO_INCREMENT COMMENT '主键id',
  `audit_id` int(16) DEFAULT NULL COMMENT '审批记录id',
  `application_code` varchar(64) COLLATE utf8_bin DEFAULT NULL,
  `name` varchar(128) COLLATE utf8_bin DEFAULT NULL COMMENT '数据源名称',
  `url` varchar(1024) COLLATE utf8_bin DEFAULT NULL COMMENT '文件地址',
  `type` varchar(64) COLLATE utf8_bin DEFAULT NULL COMMENT '模板类型(entity,dao,xml,service,serviceImpl,controller)',
  `content` text COLLATE utf8_bin COMMENT '内容',
  `description` varchar(255) COLLATE utf8_bin DEFAULT NULL COMMENT '描述',
  `remark` varchar(255) CHARACTER SET utf8 DEFAULT NULL COMMENT '备注',
  `gmt_created` datetime DEFAULT NULL COMMENT '创建时间',
  `creator` varchar(128) COLLATE utf8_bin DEFAULT NULL,
  `creator_dept_id` int(16) DEFAULT NULL COMMENT '创建者部门id',
  `creator_code` varchar(64) CHARACTER SET utf8 DEFAULT NULL COMMENT '创建者UID',
  `gmt_modified` datetime DEFAULT NULL COMMENT '更新时间',
  `modifier` varchar(128) COLLATE utf8_bin DEFAULT NULL,
  `modifier_code` varchar(64) CHARACTER SET utf8 DEFAULT NULL COMMENT '更新者UID',
  `audit_status` int(1) DEFAULT NULL COMMENT '审核状态  -1:待提交 0:提交审核  1:审核中 2: 审核不通过 3:审核通过',
  `status` int(1) DEFAULT NULL COMMENT ' 状态 -1:已删除 0:创建完成 1:审核中 2: 停用 3: 正常',
  `bak01` varchar(255) CHARACTER SET utf8 DEFAULT NULL,
  `bak02` varchar(255) CHARACTER SET utf8 DEFAULT NULL,
  `bak03` varchar(255) CHARACTER SET utf8 DEFAULT NULL,
  `bak04` varchar(255) CHARACTER SET utf8 DEFAULT NULL,
  `bak05` varchar(255) CHARACTER SET utf8 DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  KEY `idx_creator_dept_id` (`creator_dept_id`) USING BTREE,
  KEY `idx_status` (`status`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=582 DEFAULT CHARSET=utf8 COLLATE=utf8_bin ROW_FORMAT=DYNAMIC COMMENT='模板表';

/*Data for the table `templates` */

insert  into `templates`(`id`,`audit_id`,`application_code`,`name`,`url`,`type`,`content`,`description`,`remark`,`gmt_created`,`creator`,`creator_dept_id`,`creator_code`,`gmt_modified`,`modifier`,`modifier_code`,`audit_status`,`status`,`bak01`,`bak02`,`bak03`,`bak04`,`bak05`) values 
(565,NULL,NULL,'Entity.java.btl',NULL,'entity','package ${package.Entity};\r\n<% for(pkg in table.importPackages){ %>\r\nimport ${pkg};\r\n<% } %>\r\n<% if(swagger2){ %>\r\nimport io.swagger.annotations.ApiModel;\r\nimport io.swagger.annotations.ApiModelProperty;\r\n<% } %>\r\n<% if(entityLombokModel){ %>\r\nimport lombok.Data;\r\nimport lombok.EqualsAndHashCode;\r\n<% if(chainModel){ %>\r\nimport lombok.experimental.Accessors;\r\n<% } %>\r\n<% } %>\r\n/**\r\n * <p>\r\n * ${table.comment!}\r\n * </p>\r\n *\r\n * @author ${author}\r\n * @since ${date}\r\n */\r\n<% if(entityLombokModel){ %>\r\n@Data\r\n    <% if(isNotEmpty(superEntityClass)){ %>\r\n@EqualsAndHashCode(callSuper = true)\r\n    <% }else{ %>\r\n@EqualsAndHashCode(callSuper = false)\r\n    <% } %>\r\n    <% if(chainModel){ %>\r\n@Accessors(chain = true)\r\n    <% } %>\r\n<% } %>\r\n<% if(table.convert){ %>\r\n@TableName(\"${table.name}\")\r\n<% } %>\r\n<% if(swagger2){ %>\r\n@ApiModel(value=\"${entity}对象\", description=\"${table.comment!\'\'}\")\r\n<% } %>\r\n<% if(isNotEmpty(superEntityClass)){ %>\r\npublic class ${entity} extends ${superEntityClass}<% if(activeRecord){ %><${entity}><%}%>{\r\n<% }else if(activeRecord){ %>\r\npublic class ${entity} extends Model<${entity}> {\r\n<% }else{ %>\r\npublic class ${entity} implements Serializable {\r\n<% } %>\r\n\r\n<% if(entitySerialVersionUID){ %>\r\n    private static final long serialVersionUID = 1L;\r\n<% } %>\r\n<% /** -----------BEGIN 字段循环遍历----------- **/ %>\r\n<% for(field in table.fields){ %>\r\n    <%\r\n    if(field.keyFlag){\r\n        var keyPropertyName = field.propertyName;\r\n    }\r\n    %>\r\n\r\n    <% if(isNotEmpty(field.comment)){ %>\r\n        <% if(swagger2){ %>\r\n    @ApiModelProperty(value = \"${field.comment}\")\r\n        <% }else{ %>\r\n    /**\r\n     * ${field.comment}\r\n     */\r\n        <% } %>\r\n    <% } %>\r\n    <% if(field.keyFlag){ %>\r\n    <%\r\n    /*主键*/\r\n    %>\r\n        <% if(field.keyIdentityFlag){ %>\r\n    @TableId(value = \"${field.annotationColumnName}\", type = IdType.AUTO)\r\n        <% }else if(isNotEmpty(idType)){ %>\r\n    @TableId(value = \"${field.annotationColumnName}\", type = IdType.${idType})\r\n        <% }else if(field.convert){ %>\r\n    @TableId(\"${field.annotationColumnName}\")\r\n         <% } %>\r\n    <%\r\n    /*普通字段*/\r\n    %>\r\n    <% }else if(isNotEmpty(field.fill)){ %>\r\n        <% if(field.convert){ %>\r\n    @TableField(value = \"${field.annotationColumnName}\", fill = FieldFill.${field.fill})\r\n        <% }else{ %>\r\n    @TableField(fill = FieldFill.${field.fill})\r\n        <% } %>\r\n    <% }else if(field.convert){ %>\r\n    @TableField(\"${field.annotationColumnName}\")\r\n    <% } %>\r\n    <%\r\n    /*乐观锁注解*/\r\n    %>\r\n    <% if(versionFieldName!\'\' == field.name){ %>\r\n    @Version\r\n    <% } %>\r\n    <%\r\n    /*逻辑删除注解*/\r\n    %>\r\n    <% if(logicDeleteFieldName!\'\' == field.name){ %>\r\n    @TableLogic\r\n    <% } %>\r\n    private ${field.propertyType} ${field.propertyName};\r\n<% } %>\r\n<% /** -----------END 字段循环遍历----------- **/ %>\r\n\r\n<% if(!entityLombokModel){ %>\r\n    <% for(field in table.fields){ %>\r\n        <%\r\n        var getprefix =\'\';\r\n        if(field.propertyType==\'boolean\'){\r\n            getprefix=\'is\';\r\n        }else{\r\n            getprefix=\'get\';\r\n        }\r\n        %>\r\n    public ${field.propertyType} ${getprefix}${field.capitalName}() {\r\n        return ${field.propertyName};\r\n    }\r\n\r\n        <% if(chainModel){ %>\r\n    public ${entity} set${field.capitalName}(${field.propertyType} ${field.propertyName}) {\r\n        <% }else{ %>\r\n    public void set${field.capitalName}(${field.propertyType} ${field.propertyName}) {\r\n        <% } %>\r\n        this.${field.propertyName} = ${field.propertyName};\r\n        <% if(chainModel){ %>\r\n        return this;\r\n        <% } %>\r\n    }\r\n\r\n    <% } %>\r\n<% } %>\r\n<% if(entityColumnConstant){ %>\r\n   <% for(field in table.fields){ %>\r\n    public static final String ${strutil.toUpperCase(field.name)} = \"${field.name}\";\r\n\r\n   <% } %>\r\n<% } %>\r\n<% if(activeRecord){ %>\r\n    @Override\r\n    protected Serializable pkVal() {\r\n    <% if(isNotEmpty(keyPropertyName)){ %>\r\n        return this.${keyPropertyName};\r\n    <% }else{ %>\r\n        return null;\r\n    <% } %>\r\n    }\r\n\r\n<% } %>\r\n<% if(!entityLombokModel){ %>\r\n    @Override\r\n    public String toString() {\r\n        return \"${entity}{\" +\r\n    <% for(field in table.fields){ %>\r\n       <% if(fieldLP.index==0){ %>\r\n        \"${field.propertyName}=\" + ${field.propertyName} +\r\n       <% }else{ %>\r\n        \", ${field.propertyName}=\" + ${field.propertyName} +\r\n       <% } %>\r\n    <% } %>\r\n        \"}\";\r\n    }\r\n<% } %>\r\n}',NULL,'11','2021-05-11 21:53:07','elvin',40,'BK_EMW3X7VKH','2021-07-21 11:55:27','elvin','BK_EMW3X7VKH',NULL,3,NULL,NULL,NULL,NULL,NULL),
(566,NULL,NULL,'Controller.java.btl',NULL,'controller','package ${package.Controller};\r\n\r\nimport org.springframework.web.bind.annotation.RequestMapping;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.web.bind.annotation.RestController;\r\nimport ${package.Service}.${table.serviceName};\r\n\r\n@RestController\r\n@RequestMapping(\"/${table.entityPath}\")\r\npublic class ${table.controllerName} {\r\n\r\n    @Autowired\r\n    private ${table.serviceName} ${table.entityPath}Service;\r\n    \r\n    \r\n\r\n}',NULL,NULL,'2021-05-12 15:34:28','elvin',40,'BK_EMW3X7VKH','2021-07-21 11:48:24','elvin','BK_EMW3X7VKH',NULL,3,NULL,NULL,NULL,NULL,NULL),
(567,NULL,NULL,'Service.java.btl',NULL,'service','package ${package.Service};\r\n\r\nimport cn.cmcc.onecity.bc.commons.call.CommonResponse;\r\nimport cn.cmcc.onecity.bc.commons.call.PageResponse;\r\nimport ${package.Service}.entity.${table.entityName};\r\nimport ${package.Service}.entity.query.${table.entityName}Query;\r\nimport com.baomidou.mybatisplus.extension.service.IService;\r\nimport java.util.List;\r\n\r\npublic interface ${table.entityName}Service extends IService<${table.entityName}> {\r\n\r\n    /**\r\n    * 批量查询接口\r\n    * @param ids\r\n    * @return\r\n    */\r\n    CommonResponse<List<${table.entityName}>> selectByIds(List<Integer> ids);\r\n\r\n    /**\r\n    * 单查接口\r\n    * @param id\r\n    * @return\r\n    */\r\n    CommonResponse<${table.entityName}> selectById(Integer id);\r\n\r\n    /**\r\n    * 分页查询接口\r\n    * @param query\r\n    * @return\r\n    */\r\n    PageResponse<${table.entityName}> selectByPage(${table.entityName}Query query);\r\n\r\n     /**\r\n     * 新增或修改编辑接口\r\n     * @param query\r\n     * @return\r\n     */\r\n     CommonResponse saveOrEdit(${table.entityName}Query query);\r\n\r\n     /**\r\n     * 批量删除接口\r\n     * 批量删除\r\n     * @param ids\r\n     */\r\n     CommonResponse deleteBatch(String ids);\r\n}',NULL,NULL,'2021-05-26 17:05:40','elvin',40,'BK_EMW3X7VKH','2021-07-21 11:48:10','elvin','BK_EMW3X7VKH',NULL,3,NULL,NULL,NULL,NULL,NULL),
(568,NULL,NULL,'ServiceImpl.java.btl',NULL,'serviceImpl','package ${package.Service}.impl;\r\nimport cn.cmcc.onecity.bc.commons.call.CommonResponse;\r\nimport cn.cmcc.onecity.bc.commons.call.PageResponse;\r\nimport cn.cmcc.onecity.bc.commons.log.BaseLogger;\r\nimport cn.cmcc.onecity.bc.commons.status.StatusConstants;\r\nimport cn.cmcc.onecity.bc.utils.DateUtil;\r\nimport cn.cmcc.onecity.bc.utils.JsonUtil;\r\nimport cn.cmcc.onecity.bc.utils.StringUtil;\r\nimport ${package.Mapper}.${table.entityName}Mapper;\r\nimport ${package.Entity}.${table.entityName};\r\nimport ${package.Entity}.constants.SystemReturnEnum;\r\nimport ${package.Entity}.exceptions.SystemException;\r\nimport ${package.Entity}.vo.${table.entityName}Query;\r\nimport ${package.Service}.${table.entityName}Service;\r\nimport com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;\r\nimport com.baomidou.mybatisplus.extension.plugins.pagination.Page;\r\nimport com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;\r\nimport com.github.pagehelper.PageHelper;\r\nimport com.github.pagehelper.PageInfo;\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.stereotype.Service;\r\nimport org.springframework.transaction.annotation.Isolation;\r\nimport org.springframework.transaction.annotation.Propagation;\r\nimport org.springframework.transaction.annotation.Transactional;\r\nimport org.springframework.util.ObjectUtils;\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\n\r\n@Service(\"${table.entityPath}Service\")\r\n@Transactional(propagation = Propagation.REQUIRED,isolation= Isolation.DEFAULT ,rollbackFor = Exception.class)\r\npublic class ${table.entityName}ServiceImpl extends ServiceImpl<${table.entityName}Mapper, ${table.entityName}> implements ${table.entityName}Service{\r\n\r\n    private final static BaseLogger LOGGER = BaseLogger.getLogger(${table.entityName}ServiceImpl.class);\r\n\r\n    @Autowired\r\n    ${table.entityName}Mapper ${table.entityPath}Mapper;\r\n\r\n    public CommonResponse<List<${table.entityName}>> selectByIds(List<Integer> ids) {\r\n        return new CommonResponse.Builder().buildSuccess(${table.entityPath}Mapper.selectBatchIds(ids));\r\n    }\r\n\r\n    public CommonResponse<${table.entityName}> selectById(Integer id) {\r\n        return new CommonResponse.Builder().buildSuccess(${table.entityPath}Mapper.selectById(id));\r\n    }\r\n\r\n    public PageResponse<${table.entityName}> selectByPage(${table.entityName}Query ${table.entityPath}Query) {\r\n        List<${table.entityName}> list = ${table.entityPath}Mapper.selectList(assExampleForList(${table.entityPath}Query));\r\n        PageHelper.startPage((${table.entityPath}Query).getPage(),(${table.entityPath}Query).getPageSize());\r\n        PageInfo<${table.entityName}> pageInfo = new PageInfo<${table.entityName}>(list);\r\n        return new PageResponse.Builder().build(list,pageInfo.getPageNum(),pageInfo.getPageSize(),pageInfo.getTotal());\r\n    }\r\n\r\n    public CommonResponse saveOrEdit(${table.entityName}Query query) {\r\n        this.validateParamForSaveOrEdit(query);\r\n        if(!ObjectUtils.isEmpty(query.getId())){\r\n        ${table.entityPath}Mapper.updateById(query);\r\n        }\r\n        ${table.entityPath}Mapper.insert(query);\r\n        return new CommonResponse.Builder().buildSuccess();\r\n    }\r\n\r\n    public CommonResponse deleteBatch(String ids) {\r\n        String trimIds = ids.trim();\r\n        String[] split = trimIds.split(\",\");\r\n        if(StringUtil.isEmpty(trimIds) || split.length<1){\r\n        throw new SystemException(SystemReturnEnum.DELETE_BATCH_IDS_NULL);\r\n        }\r\n        List<Integer> idList = JsonUtil.parseArray(JsonUtil.toJSONString(Arrays.asList(split)), Integer.class);\r\n        ${table.entityName} ${table.entityPath} = new ${table.entityName}();\r\n        ${table.entityPath}.setStatus(3);\r\n        this.update(${table.entityPath},new QueryWrapper<${table.entityName}>().in(\"id\",idList));\r\n        return new CommonResponse.Builder().buildSuccess();\r\n    }\r\n\r\n    /**\r\n    * 参数校验\r\n    * @param query\r\n    */\r\n    private void validateParamForSaveOrEdit(${table.entityName}Query query){\r\n        // TODO\r\n    }\r\n\r\n    /**\r\n    * 组装分页参数\r\n    * @param query\r\n    * @return\r\n    */\r\n    private QueryWrapper assExampleForList(${table.entityName}Query query) {\r\n        QueryWrapper<${table.entityName}> queryWrapper = new QueryWrapper<${table.entityName}>();\r\n        // TODO\r\n        return queryWrapper;\r\n    }\r\n}',NULL,NULL,'2021-05-26 17:06:22','elvin',40,'BK_EMW3X7VKH','2021-07-22 11:17:41','elvin','BK_EMW3X7VKH',NULL,3,NULL,NULL,NULL,NULL,NULL),
(569,NULL,NULL,'Mapper.xml.btl',NULL,'xml','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\r\n<mapper namespace=\"${package.Mapper}.${table.mapperName}\">\r\n\r\n    <!-- 通用设置 -->\r\n<#if baseColumnList>\r\n    <!-- 通用查询列 -->\r\n    <sql id=\"Base_Column_List\">\r\n        <#list table.commonFields as field>\r\n            ${field.name},\r\n        </#list>\r\n        ${table.fieldNames}\r\n    </sql>\r\n\r\n    <!-- 通用条件列 -->\r\n    <sql id=\"${entity}ByCondition\">\r\n    <#list table.commonFields as field><#--生成公共字段-->\r\n        <if test=\"${field.propertyName}!=null and ${field.propertyName}!=\'\'\">\r\n            AND ${field.name} = ${r\"#{\"}${field.propertyName}${r\"}\"}\r\n        </if>\r\n    </#list>\r\n    <#list table.fields as field>\r\n        <#if !field.keyFlag><#--生成普通字段 -->\r\n            <if test=\"${field.propertyName}!=null and ${field.propertyName}!=\'\'\">\r\n                AND ${field.name} = ${r\"#{\"}${field.propertyName}${r\"}\"}\r\n            </if>\r\n        </#if>\r\n    </#list>\r\n    </sql>\r\n\r\n    <!-- 通用设置列 -->\r\n    <sql id=\"${entity}SetColumns\">\r\n    <#list table.commonFields as field><#--生成公共字段-->\r\n        <if test=\"${field.propertyName}!=null and ${field.propertyName}!=\'\'\">\r\n            ${field.name} = ${r\"#{\"}${field.propertyName}${r\"}\"},\r\n        </if>\r\n    </#list>\r\n    <#list table.fields as field>\r\n        <#if !field.keyFlag><#--生成普通字段 -->\r\n            <if test=\"${field.propertyName}!=null and ${field.propertyName}!=\'\'\">\r\n                ${field.name} = ${r\"#{\"}${field.propertyName}${r\"}\"},\r\n            </if>\r\n        </#if>\r\n    </#list>\r\n    </sql>\r\n</#if>\r\n\r\n<#if baseResultMap>\r\n    <!-- 通用查询映射结果 -->\r\n    <resultMap id=\"${entity}Map\" type=\"${package.Entity}.${entity}\">\r\n    <#list table.fields as field>\r\n        <#if field.keyFlag><#--生成主键排在第一位-->\r\n            <id column=\"${field.name}\" property=\"${field.propertyName}\"/>\r\n        </#if>\r\n    </#list>\r\n    <#list table.commonFields as field><#--生成公共字段 -->\r\n        <result column=\"${field.name}\" property=\"${field.propertyName}\"/>\r\n    </#list>\r\n    <#list table.fields as field>\r\n        <#if !field.keyFlag><#--生成普通字段 -->\r\n            <result column=\"${field.name}\" property=\"${field.propertyName}\"/>\r\n        </#if>\r\n    </#list>\r\n    </resultMap>\r\n</#if>\r\n\r\n    <!-- 查询表${table.name}所有信息 -->\r\n    <select id=\"findAll${entity}\" resultMap=\"${entity}Map\">\r\n        SELECT\r\n        <include refid=\"Base_Column_List\"/>\r\n        FROM ${table.name}\r\n    </select>\r\n\r\n<#list table.fields as field>\r\n<#if field.keyFlag>\r\n    <!-- 根据主键${field.propertyName}查询表${table.name}信息 -->\r\n    <select id=\"find${entity}By${field.propertyName}\" resultMap=\"${entity}Map\">\r\n        SELECT\r\n        <include refid=\"Base_Column_List\"/>\r\n        FROM ${table.name}\r\n        WHERE ${field.name}=${r\"#{\"}${field.propertyName}${r\"}\"}\r\n    </select>\r\n</#if>\r\n</#list>\r\n\r\n    <!-- 根据条件查询表${table.name}信息 -->\r\n    <select id=\"find${entity}ByCondition\" resultMap=\"${entity}Map\">\r\n        SELECT\r\n        <include refid=\"Base_Column_List\"/>\r\n        FROM ${table.name}\r\n        WHERE 1=1\r\n        <include refid=\"${entity}ByCondition\" />\r\n    </select>\r\n\r\n<#list table.fields as field>\r\n<#if field.keyFlag>\r\n    <!-- 根据主键${field.propertyName}删除表${table.name}信息 -->\r\n    <delete id=\"delete${entity}By${field.propertyName}\">\r\n        DELETE FROM\r\n        ${table.name}\r\n        WHERE ${field.name}=${r\"#{\"}${field.propertyName}${r\"}\"}\r\n    </delete>\r\n</#if>\r\n</#list>\r\n\r\n<#list table.fields as field>\r\n<#if field.keyFlag>\r\n    <!-- 根据主键${field.propertyName}更新表${table.name}信息 -->\r\n    <update id=\"update${entity}By${field.propertyName}\" parameterType=\"${package.Entity}.${entity}\">\r\n        UPDATE ${table.name}\r\n        <set>\r\n            <include refid=\"${entity}SetColumns\"/>\r\n        </set>\r\n        WHERE\r\n        <#list table.fields as field><#if field.keyFlag>${field.name}=${r\"#{\"}${field.propertyName}${r\"}\"}</#if></#list>\r\n    </update>\r\n</#if>\r\n</#list>\r\n\r\n<#list table.fields as field>\r\n<#if field.keyFlag>\r\n    <!-- 新增表${table.name}信息 -->\r\n    <insert id=\"add${entity}\">\r\n        INSERT INTO ${table.name} (\r\n        <#list table.fields as field>\r\n            <#if field_index gt 0>,</#if>${field.name}\r\n            </#list>\r\n        ) VALUES (\r\n        <#list table.fields as field>\r\n            <#if field_index gt 0>,</#if>${r\"#{\"}${field.propertyName}${r\"}\"}\r\n            </#list>\r\n        )\r\n    </insert>\r\n</#if>\r\n</#list>\r\n</mapper>',NULL,NULL,'2021-05-26 17:07:00','elvin',40,'BK_EMW3X7VKH','2021-07-21 11:48:19','elvin','BK_EMW3X7VKH',NULL,3,NULL,NULL,NULL,NULL,NULL),
(570,NULL,NULL,'Mapper.java.btl',NULL,'dao','package ${package.Mapper};\r\n\r\nimport ${package.Entity}.${entity};\r\nimport java.util.List;\r\nimport org.apache.ibatis.annotations.Param;\r\n\r\npublic interface ${table.mapperName}{\r\n    \r\n     /**\r\n      *  查询表${table.name}所有信息\r\n      */\r\n     List<${entity}> findAll${entity}();\r\n      \r\n    <#list table.fields as field>\r\n    <#if field.keyFlag>\r\n     /**\r\n      *  根据主键${field.propertyName}查询表${table.name}信息\r\n      *  @param ${field.propertyName}\r\n      */\r\n     ${entity} find${entity}By${field.propertyName}(@Param(\"${field.propertyName}\") ${field.propertyType} ${field.propertyName});\r\n    </#if>\r\n    </#list>\r\n\r\n    /**\r\n    *  根据条件查询表${table.name}信息\r\n    *  @param ${table.entityPath}\r\n    */\r\n    List<${entity}> find${entity}ByCondition(${entity} ${table.entityPath});\r\n\r\n    <#list table.fields as field>\r\n    <#if field.keyFlag>\r\n     /**\r\n      *  根据主键${field.propertyName}查询表${table.name}信息\r\n      *  @param ${field.propertyName}\r\n      */\r\n     Integer delete${entity}By${field.propertyName}(@Param(\"${field.propertyName}\") ${field.propertyType} ${field.propertyName});\r\n    </#if>\r\n    </#list>\r\n    \r\n    <#list table.fields as field>\r\n    <#if field.keyFlag>\r\n     /**\r\n      *  根据主键${field.propertyName}更新表${table.name}信息\r\n      *  @param ${table.entityPath}\r\n      */\r\n     Integer update${entity}By${field.propertyName}(${entity} ${table.entityPath});\r\n    </#if>\r\n    </#list>\r\n    \r\n    <#list table.fields as field>\r\n    <#if field.keyFlag>\r\n     /**\r\n      *  新增表${table.name}信息\r\n      *  @param ${table.entityPath}\r\n      */\r\n     Integer add${entity}(${entity} ${table.entityPath});\r\n    </#if>\r\n    </#list>\r\n    \r\n}',NULL,NULL,'2021-05-26 17:07:27','elvin',40,'BK_EMW3X7VKH','2021-07-21 11:48:01','elvin','BK_EMW3X7VKH',NULL,3,NULL,NULL,NULL,NULL,NULL),
(571,NULL,NULL,'Query.java.btl',NULL,'query','package ${package.Entity}.query;\r\n\r\nimport ${package.Entity}.${table.entityName};\r\n\r\npublic class ${table.entityName}Query extends ${table.entityName} {\r\n\r\n    /** 当前页码*/\r\n    private Integer page;\r\n    /** 页长*/\r\n    private Integer pageSize;\r\n    /** 起始时间*/\r\n    private String startTime;\r\n    /** 截止时间*/\r\n    private String endTime;\r\n    /** 状态*/\r\n    private String states;\r\n\r\n    public Integer getPage() {\r\n        return page;\r\n    }\r\n\r\n    public void setPage(Integer page) {\r\n        this.page = page;\r\n    }\r\n\r\n    public Integer getPageSize() {\r\n        return pageSize;\r\n    }\r\n\r\n    public void setPageSize(Integer pageSize) {\r\n        this.pageSize = pageSize;\r\n    }\r\n\r\n    public String getStartTime() {\r\n        return startTime;\r\n    }\r\n\r\n    public void setStartTime(String startTime) {\r\n        this.startTime = startTime;\r\n    }\r\n\r\n    public String getEndTime() {\r\n        return endTime;\r\n    }\r\n\r\n    public void setEndTime(String endTime) {\r\n        this.endTime = endTime;\r\n    }\r\n\r\n    public String getStates() {\r\n        return states;\r\n    }\r\n\r\n    public void setStates(String states) {\r\n        this.states = states;\r\n    }\r\n}',NULL,NULL,'2021-05-31 10:25:42','dongzuozheng',40,'OC_EKDI11N5J','2021-06-01 14:08:51','dongzuozheng','OC_EKDI11N5J',NULL,3,NULL,NULL,NULL,NULL,NULL),
(576,NULL,NULL,'ww',NULL,'','ww',NULL,NULL,'2021-07-21 14:57:58','elvin',40,'BK_EMW3X7VKH','2021-07-21 15:00:06','elvin','BK_EMW3X7VKH',NULL,-1,NULL,NULL,NULL,NULL,NULL),
(577,NULL,NULL,'ww',NULL,'','www',NULL,NULL,'2021-07-21 14:59:47','elvin',40,'BK_EMW3X7VKH','2021-07-21 15:00:08','elvin','BK_EMW3X7VKH',NULL,-1,NULL,NULL,NULL,NULL,NULL),
(578,NULL,NULL,'Entity.vue.btl',NULL,'','',NULL,NULL,'2021-07-21 15:20:07','admin',1,'BK_000000000','2021-07-21 15:20:23','admin','BK_000000000',NULL,-1,NULL,NULL,NULL,NULL,NULL),
(579,NULL,NULL,'List.vue.btl',NULL,'','<html>\r\n<% for(field in table.fields){ %>\r\n    <%\r\n    if(field.keyFlag){\r\n        var keyPropertyName = field.propertyName;\r\n    }\r\n    %>\r\n\r\n    <% if(isNotEmpty(field.comment)){ %>\r\n        <% if(swagger2){ %>\r\n    @ApiModelProperty(value = \"${field.comment}\")\r\n        <% }else{ %>\r\n    /**\r\n     * ${field.comment}\r\n     */\r\n        <% } %>\r\n    <% } %>\r\n    <% if(field.keyFlag){ %>\r\n    <%\r\n    /*主键*/\r\n    %>\r\n        <% if(field.keyIdentityFlag){ %>\r\n    @TableId(value = \"${field.annotationColumnName}\", type = IdType.AUTO)\r\n        <% }else if(isNotEmpty(idType)){ %>\r\n    @TableId(value = \"${field.annotationColumnName}\", type = IdType.${idType})\r\n        <% }else if(field.convert){ %>\r\n    @TableId(\"${field.annotationColumnName}\")\r\n         <% } %>\r\n    <%\r\n    /*普通字段*/\r\n    %>\r\n    <% }else if(isNotEmpty(field.fill)){ %>\r\n        <% if(field.convert){ %>\r\n    @TableField(value = \"${field.annotationColumnName}\", fill = FieldFill.${field.fill})\r\n        <% }else{ %>\r\n    @TableField(fill = FieldFill.${field.fill})\r\n        <% } %>\r\n    <% }else if(field.convert){ %>\r\n    @TableField(\"${field.annotationColumnName}\")\r\n    <% } %>\r\n    <%\r\n    /*乐观锁注解*/\r\n    %>\r\n    <% if(versionFieldName!\'\' == field.name){ %>\r\n    @Version\r\n    <% } %>\r\n    <%\r\n    /*逻辑删除注解*/\r\n    %>\r\n    <% if(logicDeleteFieldName!\'\' == field.name){ %>\r\n    @TableLogic\r\n    <% } %>\r\n    private ${field.propertyType} ${field.propertyName};\r\n<% } %>\r\n<html>',NULL,NULL,'2021-07-21 15:38:30','elvin',40,'BK_EMW3X7VKH','2021-07-21 16:38:48','elvin','BK_EMW3X7VKH',NULL,3,NULL,NULL,NULL,NULL,NULL),
(580,NULL,NULL,'2',NULL,'','2',NULL,NULL,'2021-07-21 20:59:32',NULL,NULL,'BC000301','2021-07-21 20:59:38',NULL,'BC000301',NULL,-1,NULL,NULL,NULL,NULL,NULL),
(581,NULL,NULL,'h',NULL,'','d',NULL,NULL,'2021-07-22 11:17:49',NULL,NULL,NULL,'2021-07-22 11:17:53',NULL,NULL,NULL,-1,NULL,NULL,NULL,NULL,NULL);

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;
